---
import dateformat from 'dateformat'
import Timeline from './Timeline.astro'

const { agenda } = Astro.props;

const isoDate = new Date(agenda.date);

const track1 = agenda.rooms[0].sessions;
const track2 = [...agenda.rooms[0].sessions.filter(s=>s.isServiceSession), ...agenda.rooms[1].sessions].sort((a, b) => new Date(a.startsAt) - new Date(b.startsAt));

---

<div id={"agenda-" + isoDate.toDateString()}>
  <h3>{dateformat(isoDate, "dddd, mmmm dS")}</h3>
	<details open={dateformat(isoDate, "yyyymmdd") == dateformat(new Date(), "yyyymmdd")}>
		<summary>Programme</summary>
		<div class="programme-day">
			<Timeline title="Track 1" timeline={track1} />
			<Timeline title="Track 2" timeline={track2}  />
		</div>
		<h4>Collaboration Space</h4>
		<ul>
			{agenda.rooms[2] && agenda.rooms[2].sessions.map(item => (
				<li>
					<time>{item.startsAt}</time> - <strong>{item.title}</strong> with {item.speakers[0].name}
				</li>
			))}
		</ul>
	</details>
</div>


<style>

summary {
	display: flex;
	align-items: center;
	cursor: pointer;
}

summary::-webkit-details-marker {
  display: none;
}

summary::before {
	content: '►  Show';
	margin-right: 5px;
}

details[open] summary::before {
	content: '▼  Hide';
}

.programme-day {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}

@media (min-width: 50em) {
	.programme-day {
		flex-direction: row;
	}
}

</style>
